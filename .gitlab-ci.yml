image: openjdk:11-jdk

variables:
  ANDROID_SDK_ROOT: "/opt/android-sdk"
  ANDROID_HOME: "/opt/android-sdk"

stages:
  - setup
  - lint
  - test
  - build
  - deploy

cache:
  paths:
    - node_modules/
    - .gradle/

before_script:
  # Install Node.js
  - curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
  - apt-get install -y nodejs
  
  # Install Android SDK
  - apt-get update -qq && apt-get install -y -qq wget unzip
  - wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O android-sdk-tools.zip
  - mkdir -p ${ANDROID_SDK_ROOT}/cmdline-tools
  - unzip -q android-sdk-tools.zip -d ${ANDROID_SDK_ROOT}/cmdline-tools
  - mv ${ANDROID_SDK_ROOT}/cmdline-tools/cmdline-tools ${ANDROID_SDK_ROOT}/cmdline-tools/latest
  - export PATH=$PATH:${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin:${ANDROID_SDK_ROOT}/platform-tools
  
  # Accept licenses and install components
  - yes | sdkmanager --licenses
  - sdkmanager "platform-tools" "platforms;android-35" "build-tools;35.0.0"
  
  # Install Node dependencies
  - npm ci

setup:
  stage: setup
  script:
    - echo "Setting up environment..."
    - node --version
    - npm --version
    - java -version

lint:
  stage: lint
  script:
    - npm run lint
  allow_failure: true

test:
  stage: test
  script:
    - npm test -- --watchAll=false --coverage
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage/cobertura-coverage.xml
  allow_failure: true

build_debug:
  stage: build
  script:
    # Set environment variables for debug build
    - export GHOSTBRIDGE_STORE_PASSWORD=$GHOSTBRIDGE_STORE_PASSWORD_DEBUG
    - export GHOSTBRIDGE_KEY_PASSWORD=$GHOSTBRIDGE_KEY_PASSWORD_DEBUG
    
    # Build debug APK
    - cd android
    - ./gradlew assembleDebug
    
    # Copy APK to artifacts
    - cp app/build/outputs/apk/debug/app-debug.apk ../ghostbridge-debug.apk
    
  artifacts:
    paths:
      - ghostbridge-debug.apk
    expire_in: 1 week
  only:
    - develop
    - merge_requests

build_release:
  stage: build
  script:
    # Validate environment variables
    - |
      if [ -z "$GHOSTBRIDGE_STORE_PASSWORD" ] || [ -z "$GHOSTBRIDGE_KEY_PASSWORD" ]; then
        echo "ERROR: Production signing credentials not set"
        exit 1
      fi
    
    # Set environment variables
    - export GHOSTBRIDGE_STORE_PASSWORD=$GHOSTBRIDGE_STORE_PASSWORD
    - export GHOSTBRIDGE_KEY_PASSWORD=$GHOSTBRIDGE_KEY_PASSWORD
    
    # Build release APK
    - cd android
    - ./gradlew assembleRelease
    
    # Copy APK to artifacts
    - cp app/build/outputs/apk/release/app-release.apk ../ghostbridge-release.apk
    
    # Generate checksums
    - sha256sum ../ghostbridge-release.apk > ../ghostbridge-release.apk.sha256
    
  artifacts:
    paths:
      - ghostbridge-release.apk
      - ghostbridge-release.apk.sha256
    expire_in: 4 weeks
  only:
    - main
    - tags

deploy_to_registry:
  stage: deploy
  script:
    # Create release package
    - |
      cat > release-notes.md << EOF
      # GhostBridge Release $(date +%Y%m%d-%H%M%S)
      
      ## Security Features
      - Military-grade encryption (AES-256 + X25519)
      - Perfect Forward Secrecy
      - Anti-forensics & intrusion detection
      - Hardware-backed security
      
      ## Build Info
      - Commit: $CI_COMMIT_SHA
      - Pipeline: $CI_PIPELINE_ID
      - Built: $(date -u +"%Y-%m-%d %H:%M:%S UTC")
      
      ## Checksums
      \`\`\`
      $(cat ghostbridge-release.apk.sha256)
      \`\`\`
      EOF
    
    # Upload to GitLab Package Registry
    - |
      curl --header "JOB-TOKEN: $CI_JOB_TOKEN" \
           --upload-file ghostbridge-release.apk \
           "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/ghostbridge/${CI_COMMIT_TAG:-latest}/ghostbridge-release.apk"
    
    # Create GitLab Release
    - |
      if [ -n "$CI_COMMIT_TAG" ]; then
        curl --header "PRIVATE-TOKEN: $GITLAB_TOKEN" \
             --data "name=GhostBridge $CI_COMMIT_TAG" \
             --data "tag_name=$CI_COMMIT_TAG" \
             --data "description=$(cat release-notes.md)" \
             --data "assets[links][][name]=APK Download" \
             --data "assets[links][][url]=${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/ghostbridge/${CI_COMMIT_TAG}/ghostbridge-release.apk" \
             "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/releases"
      fi
  only:
    - main
    - tags
  dependencies:
    - build_release

# Security scanning
security_scan:
  stage: test
  script:
    - npm audit --audit-level=moderate
  allow_failure: true

# Performance test
performance_test:
  stage: test
  script:
    - echo "Running performance tests..."
    # Add performance testing tools here
  allow_failure: true