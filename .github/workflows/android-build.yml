name: Android Build

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci --legacy-peer-deps

    - name: Create google-services.json
      run: |
        if [ -f android/app/google-services.json.template ]; then
          cp android/app/google-services.json.template android/app/google-services.json
        else
          echo '{}' > android/app/google-services.json
        fi

    - name: Make gradlew executable
      run: chmod +x android/gradlew

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Build Android Debug APK
      run: |
        cd android
        ./gradlew assembleDebug

    - name: Upload Debug APK
      uses: actions/upload-artifact@v4
      with:
        name: app-debug
        path: android/app/build/outputs/apk/debug/app-debug.apk

    - name: Build Android Release APK
      run: |
        cd android
        ./gradlew assembleRelease || true
      continue-on-error: true

    - name: Upload Release APK (if built)
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: app-release
        path: android/app/build/outputs/apk/release/app-release-unsigned.apk
      continue-on-error: true

    - name: Run tests
      run: |
        cd android
        ./gradlew test || true
      continue-on-error: true

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: app-debug

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.run_number }}
        name: Release Build ${{ github.run_number }}
        body: |
          Automated release from GitHub Actions
          
          **Changes**: ${{ github.event.head_commit.message }}
          
          **Download**: app-debug.apk
        files: app-debug.apk
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}